__seen_operation() { ## evaluiert zu 0 wenn noch kein Operation gefunden wurde
    # $1 sollte Operationen-String sein
    local top=($1)
    for op in ${top[@]}; do
        if [[ " ${COMP_WORDS[@]} " =~ " ${op} " ]]; then #  Es geht nur eine Opertaion
            echo $op
            return
        fi
    done
    echo 0
}

__test_in() { ## ist $1 in $2?
    if [[ " $2 " =~ " $1 " ]]; then
        echo $t
        return
    fi
    echo 0
}

_jake() {
    local cur prev opts seen sets lseen
    COMPREPLY=()
    cur="${COMP_WORDS[COMP_CWORD]}"
    prev="${COMP_WORDS[COMP_CWORD-1]}"
    sets=$(lilly_jake _gsettings)
    #Man sollte _goptions unbedingt in _goperations umbenennen
    opts=$(lilly_jake _goptions)
    opts+=$(ls | grep -e ".tex" -e ".conf") ## find -maxdepth 1 -type f


    seen=$(__seen_operation "${opts}")

    lseen=$(__seen_operation "-path: Hallo")

    if [[ ${lseen} != 0 ]]; then
        echo "heyho"
    fi

    local IFS=$'\t\n'

    if [[ $(__test_in ${prev//-} ${sets}) != 0 ]]; then 
        COMPREPLY=( $(compgen -W "Es gab ein wichtiges Update - Bitte installiere Jake erneut!" -- ${cur}) )
        return 0
    fi

    if [[ ${cur} == -* || ${seen} != 0 ]]; then
        COMPREPLY=( $(compgen -W "${sets}" -- ${cur}) )
    else
        COMPREPLY=( $(compgen -W "${opts}" -- ${cur}) )
    fi
    return 0
}
complete -o nospace -F _jake lilly_jake
