#!/bin/bash
#Diese Datei generiert und exekutiert ein Makefile, welches die gewünschte Latex-Datei (auf Basis von LILLY) in das gewünschte Format verwandelt
##TODO: ADD COMMAND LINE PARAMTERS
##TODO: AUTOCOMPLETION BY https://askubuntu.com/questions/68175/how-to-create-script-with-auto-complete#68203
##      => INSTALLFILE
ESC="\033["
COL_RESET="${ESC}m"
COL_HIGHLIGHT="${ESC}38;2;160;32;240m"
COL_SUCC="${ESC}38;2;102;250;0m"
COL_WARNING="${ESC}38;2;255;191;0m"
COL_ERROR="${ESC}38;2;255;32;82m"

DATE=$(date +'%d.%m.%Y %H:%M:%S')


echo -e "${COL_HIGHLIGHT}[Compile] Generiere Makefile...${COL_RESET}"

##Generiere angepasstes Makefile

DIRECTORY="./"
FILE="dummy"
COMPILE_MODES="default"
DUMMY="Hallo Welt"
CLEAN="TRU"
for i in "$@" ## Für alle Argumente
do case $i in ## Switch case
    -dir=*|--directory=*)
        DIRECTORY="${i#*=}"
    ;;
    *.tex)
        FILE="${i}"
    ;;
    print|blockpoi)
        COMPILE_MODES="${COMPILE_MODES} ${i}"
    ;;
    -mode=*)
        COMPILE_MODES="${i#*=}"
    ;;
    --dummy=*)
        DUMMY="${i#*=}"
    ;;
    --no_clean)
        CLEAN="False"
    ;;
    *)
        echo -e "${COL_WARNING}Die Option: \"${i}\" ist nicht bekannt!${COL_RESET}"
    ;;
esac
done

if [ "$FILE" == "dummy" ] 
    then
        echo -e "${COL_ERROR}Bitte gibt die Latex-Quelldatei an!${COL_RESET}"
        exit 1
fi
COMPILE_MODES=($COMPILE_MODES)
#echo -e "Searching for: ${DIRECTORY}${FILE} compile for: \"${COMPILE_MODES[*]}\" (${#COMPILE_MODES[*]})"

echo -e "### ${DATE} - Generiertes Makefile für Lilly\n" > ${DIRECTORY}Makefile   ## Override old Makefile if it exists

#setze MAKEFILE-Variablen unabhängig der Konfigurationen ##TODO: MAKE EDITABLE

echo "TEXFILE   := ${FILE}           ## Alternativ: '\$(shell ls *.tex)'" >> ${DIRECTORY}Makefile 
echo "PDFFILE   := \$(addsuffix .pdf,\$(basename \$(TEXFILE)))" >> ${DIRECTORY}Makefile 
echo "LATEXARGS := -shell-escape -enable-write18 -interaction=batchmode" >> ${DIRECTORY}Makefile 
echo "MACROARGS := \\\\def\\\\LILLYxDummy{${DUMMY}}" >> ${DIRECTORY}Makefile 
echo "OUTPUTDRIVER := """ >> ${DIRECTORY}Makefile 

## Generiere Make-Typen
echo "define LILLY_compile = " >> ${DIRECTORY}Makefile 
echo "    @pdflatex -jobname \$(basename \${1}) \$(LATEXARGS) \$(MACROARGS) \\\\input{${FILE}} > LILLY_COMPILE.log" >> ${DIRECTORY}Makefile 
## echo "    bibtex ${FILE%".tex"}" >> ${DIRECTORY}Makefile 
echo "    @pdflatex -jobname \$(basename \${1}) \$(OUTPUTDRIVER) \$(LATEXARGS) \$(MACROARGS) \\\\input{${FILE}}  >> LILLY_COMPILE.log" >> ${DIRECTORY}Makefile 

if [ "$CLEAN" == "TRU" ] 
    then  ## Löschen entstehender Daten ist erwünscht - Standard
        echo -e "    @## Lösche unbenötigte Dateien: (Kann durch '-no_clean' verhindert werden!)" >> ${DIRECTORY}Makefile 
        echo -e "\t@echo \"${COL_WARNING}Lösche Temporäre Dateien...${COL_RESET}\"" >> ${DIRECTORY}Makefile 
        echo "    @rm -f *.log && rm -f *.aux && rm -f *.out" >> ${DIRECTORY}Makefile 
        echo "    @rm -f *.ind && rm -f *.bbl && rm -f *.blg" >> ${DIRECTORY}Makefile 
        echo "    @rm -f *.lof && rm -f *.lot && rm -f *.toc" >> ${DIRECTORY}Makefile 
        echo "    @rm -f *.idx && rm -f *.acn && rm -f *.acr" >> ${DIRECTORY}Makefile 
        echo "    @rm -f *.alg && rm -f *.glg && rm -f *.glo" >> ${DIRECTORY}Makefile 
        echo "    @rm -f *.gls && rm -f *.fls && rm -f *.fdb_latexmk" >> ${DIRECTORY}Makefile 
        echo -e "\t@echo \"${COL_SUCC}Generierierung von \\\"\${0}\\\" abgeschlossen${COL_RESET}\"" >> ${DIRECTORY}Makefile 

fi



## Cleanup - Routine



echo -e "endef\n\n" >> ${DIRECTORY}Makefile 

echo "default: ${FILE}" >> ${DIRECTORY}Makefile 
echo -e "\t@echo \"${COL_WARNING}Generiere Standard-Version der Latex-Datei: \\\"${FILE}\\\"...${COL_RESET}\"" >> ${DIRECTORY}Makefile 
echo -e "\t\$(call LILLY_compile,\$(PDFFILE))" >> ${DIRECTORY}Makefile 











