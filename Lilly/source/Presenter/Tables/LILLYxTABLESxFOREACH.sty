\NeedsTeXFormat{LaTeX2e}
\ProvidesPackage{LILLYxTABLESxFOREACH}[2019/08/02 Stellt eine foreach-Erweiterung fuer Tabellen zur Verfuegung]
\RequirePackage{LILLYxCORE,LILLYxTABLES}

\LILLYxDemandPackage{etoolbox}{Wir brauchen die Tokens}
    {Ohne gehts nicht - leider}{}{}
% Wir konstruieren einen Befehl, der Analog zu Foreach es ermöglicht
\newtoks\@@tabular@tokens% Hält die aktuellen Tokens
%% Adds Tokens to the current token holder by appending it to the current Tokens:D
\long\def\tabadd#1{%
    \global\@@tabular@tokens\expandafter{\the\@@tabular@tokens#1}%
}
%% Adds expanded Tokens to the current token holder by appending it to the current Tokens:D
\long\def\etabadd#1{%
    \protected@edef\@@@tmp{#1}\expandafter\tabadd\expandafter{\@@@tmp}%
}
% Resets the current Tokens
\def\tabreset{\global\@@tabular@tokens{}}

% Prints the Tokens for the tabular
\def\tabprint{\the\@@tabular@tokens}

%% Foreach :D
% foreach #1 in #2 do #3
\long\def\tabforeach#1#2#3{%
    \tabreset\def\amp{\noexpand&}%
    \foreach #1 in {#2} {%
        #3\tabadd{\\}%
    }
}
%% Foreach :D
% Manual foreach #1 in #2 do #3, wil insert no newline
\long\def\tabforeachm#1#2#3{%
    \tabreset\def\amp{\noexpand&}%
    \foreach #1 in {#2} {%
        #3%
    }
}
\endinput